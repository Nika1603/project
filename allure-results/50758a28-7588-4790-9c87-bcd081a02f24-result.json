{"name": "test_click_on_pizza_image", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=125.0.6422.113)\nStacktrace:\n0   chromedriver                        0x0000000100c2e4c8 chromedriver + 4302024\n1   chromedriver                        0x0000000100c26e10 chromedriver + 4271632\n2   chromedriver                        0x000000010085819c chromedriver + 278940\n3   chromedriver                        0x0000000100833474 chromedriver + 128116\n4   chromedriver                        0x00000001008bf394 chromedriver + 701332\n5   chromedriver                        0x00000001008d24e4 chromedriver + 779492\n6   chromedriver                        0x000000010088f004 chromedriver + 503812\n7   chromedriver                        0x000000010088f9ec chromedriver + 506348\n8   chromedriver                        0x0000000100bf6510 chromedriver + 4072720\n9   chromedriver                        0x0000000100bfafbc chromedriver + 4091836\n10  chromedriver                        0x0000000100bdd754 chromedriver + 3970900\n11  chromedriver                        0x0000000100bfb8a4 chromedriver + 4094116\n12  chromedriver                        0x0000000100bd06d4 chromedriver + 3917524\n13  chromedriver                        0x0000000100c18b08 chromedriver + 4213512\n14  chromedriver                        0x0000000100c18c84 chromedriver + 4213892\n15  chromedriver                        0x0000000100c26a08 chromedriver + 4270600\n16  libsystem_pthread.dylib             0x000000019b32ef94 _pthread_start + 136\n17  libsystem_pthread.dylib             0x000000019b329d34 thread_start + 8", "trace": "self = <tests.test_main_page.TestMainPage object at 0x1050ac880>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b652e789db8601792a34c4878592f72b\")>\n\n    @allure.story('View pizza description')\n    @allure.step('Click on pizza image in slider')\n    def test_click_on_pizza_image(self, driver):\n        main_page = MainPage(driver)\n        main_page.open_main_page()\n    \n        # Шаги\n>       main_page.click_on_pizza_image()\n\ntests/test_main_page.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/main_page.py:23: in click_on_pizza_image\n    pizza_image = WebDriverWait(self.driver, 30).until(\n/opt/miniconda3/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n/opt/miniconda3/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py:156: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n/opt/miniconda3/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/miniconda3/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1050accd0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...00019b32ef94 _pthread_start + 136\\\\n17  libsystem_pthread.dylib             0x000000019b329d34 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=125.0.6422.113)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000100c2e4c8 chromedriver + 4302024\nE       1   chromedriver                        0x0000000100c26e10 chromedriver + 4271632\nE       2   chromedriver                        0x000000010085819c chromedriver + 278940\nE       3   chromedriver                        0x0000000100833474 chromedriver + 128116\nE       4   chromedriver                        0x00000001008bf394 chromedriver + 701332\nE       5   chromedriver                        0x00000001008d24e4 chromedriver + 779492\nE       6   chromedriver                        0x000000010088f004 chromedriver + 503812\nE       7   chromedriver                        0x000000010088f9ec chromedriver + 506348\nE       8   chromedriver                        0x0000000100bf6510 chromedriver + 4072720\nE       9   chromedriver                        0x0000000100bfafbc chromedriver + 4091836\nE       10  chromedriver                        0x0000000100bdd754 chromedriver + 3970900\nE       11  chromedriver                        0x0000000100bfb8a4 chromedriver + 4094116\nE       12  chromedriver                        0x0000000100bd06d4 chromedriver + 3917524\nE       13  chromedriver                        0x0000000100c18b08 chromedriver + 4213512\nE       14  chromedriver                        0x0000000100c18c84 chromedriver + 4213892\nE       15  chromedriver                        0x0000000100c26a08 chromedriver + 4270600\nE       16  libsystem_pthread.dylib             0x000000019b32ef94 _pthread_start + 136\nE       17  libsystem_pthread.dylib             0x000000019b329d34 thread_start + 8\n\n/opt/miniconda3/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchWindowException"}, "steps": [{"name": "Click on pizza image in slider", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=125.0.6422.113)\nStacktrace:\n0   chromedriver                        0x0000000100c2e4c8 chromedriver + 4302024\n1   chromedriver                        0x0000000100c26e10 chromedriver + 4271632\n2   chromedriver                        0x000000010085819c chromedriver + 278940\n3   chromedriver                        0x0000000100833474 chromedriver + 128116\n4   chromedriver                        0x00000001008bf394 chromedriver + 701332\n5   chromedriver                        0x00000001008d24e4 chromedriver + 779492\n6   chromedriver                        0x000000010088f004 chromedriver + 503812\n7   chromedriver                        0x000000010088f9ec chromedriver + 506348\n8   chromedriver                        0x0000000100bf6510 chromedriver + 4072720\n9   chromedriver                        0x0000000100bfafbc chromedriver + 4091836\n10  chromedriver                        0x0000000100bdd754 chromedriver + 3970900\n11  chromedriver                        0x0000000100bfb8a4 chromedriver + 4094116\n12  chromedriver                        0x0000000100bd06d4 chromedriver + 3917524\n13  chromedriver                        0x0000000100c18b08 chromedriver + 4213512\n14  chromedriver                        0x0000000100c18c84 chromedriver + 4213892\n15  chromedriver                        0x0000000100c26a08 chromedriver + 4270600\n16  libsystem_pthread.dylib             0x000000019b32ef94 _pthread_start + 136\n17  libsystem_pthread.dylib             0x000000019b329d34 thread_start + 8\n\n", "trace": "  File \"/opt/miniconda3/lib/python3.9/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/macbooknikakrasivaya/PycharmProjects/2.7/pythonProjectFinal/tests/test_main_page.py\", line 31, in test_click_on_pizza_image\n    main_page.click_on_pizza_image()\n  File \"/Users/macbooknikakrasivaya/PycharmProjects/2.7/pythonProjectFinal/pages/main_page.py\", line 23, in click_on_pizza_image\n    pizza_image = WebDriverWait(self.driver, 30).until(\n  File \"/opt/miniconda3/lib/python3.9/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n  File \"/opt/miniconda3/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py\", line 156, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n  File \"/opt/miniconda3/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 741, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n  File \"/opt/miniconda3/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/miniconda3/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b652e789db8601792a34c4878592f72b\")>"}], "start": 1717405846660, "stop": 1717405870650}], "start": 1717405846660, "stop": 1717405870655, "uuid": "fa32af34-3344-4a29-930d-5670d35a0228", "historyId": "617a5d3118076935a9f30762c93b6f13", "testCaseId": "617a5d3118076935a9f30762c93b6f13", "fullName": "tests.test_main_page.TestMainPage#test_click_on_pizza_image", "labels": [{"name": "story", "value": "View pizza description"}, {"name": "feature", "value": "Main Page"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_page"}, {"name": "subSuite", "value": "TestMainPage"}, {"name": "host", "value": "MacBook-Air-MacBook.local"}, {"name": "thread", "value": "6285-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_page"}]}