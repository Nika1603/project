{"name": "test_click_on_pizza_image", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests.test_main_page.TestMainPage object at 0x10655ac70>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4c5430a2c899d5602cf7d62089868061\")>\n\n    @allure.story('View pizza description')\n    @allure.step('Click on pizza image in slider')\n    def test_click_on_pizza_image(self, driver):\n        main_page = MainPage(driver)\n        main_page.open_main_page()\n    \n        # Шаги\n>       main_page.click_on_pizza_image()\n\ntests/test_main_page.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/main_page.py:22: in click_on_pizza_image\n    pizza_image = WebDriverWait(self.driver, 20).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4c5430a2c899d5602cf7d62089868061\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x10608b940>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/miniconda3/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "steps": [{"name": "Click on pizza image in slider", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/opt/miniconda3/lib/python3.9/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/macbooknikakrasivaya/PycharmProjects/2.7/pythonProjectFinal/tests/test_main_page.py\", line 31, in test_click_on_pizza_image\n    main_page.click_on_pizza_image()\n  File \"/Users/macbooknikakrasivaya/PycharmProjects/2.7/pythonProjectFinal/pages/main_page.py\", line 22, in click_on_pizza_image\n    pizza_image = WebDriverWait(self.driver, 20).until(\n  File \"/opt/miniconda3/lib/python3.9/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"4c5430a2c899d5602cf7d62089868061\")>"}], "start": 1717404889594, "stop": 1717404910602}], "start": 1717404889594, "stop": 1717404910606, "uuid": "33b09576-3d51-4727-90f7-6c2906d8b635", "historyId": "617a5d3118076935a9f30762c93b6f13", "testCaseId": "617a5d3118076935a9f30762c93b6f13", "fullName": "tests.test_main_page.TestMainPage#test_click_on_pizza_image", "labels": [{"name": "story", "value": "View pizza description"}, {"name": "feature", "value": "Main Page"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_page"}, {"name": "subSuite", "value": "TestMainPage"}, {"name": "host", "value": "MacBook-Air-MacBook.local"}, {"name": "thread", "value": "5840-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_page"}]}