{"name": "test_add_pizza_to_cart", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\".//a[@class=\"add_to_cart_button\"]\"}\n  (Session info: chrome=125.0.6422.113); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n0   chromedriver                        0x000000010050e4c8 chromedriver + 4302024\n1   chromedriver                        0x0000000100506e10 chromedriver + 4271632\n2   chromedriver                        0x000000010013819c chromedriver + 278940\n3   chromedriver                        0x000000010017a2c4 chromedriver + 549572\n4   chromedriver                        0x000000010017085c chromedriver + 510044\n5   chromedriver                        0x00000001001b2c5c chromedriver + 781404\n6   chromedriver                        0x000000010016f004 chromedriver + 503812\n7   chromedriver                        0x000000010016f9ec chromedriver + 506348\n8   chromedriver                        0x00000001004d6510 chromedriver + 4072720\n9   chromedriver                        0x00000001004dafbc chromedriver + 4091836\n10  chromedriver                        0x00000001004bd754 chromedriver + 3970900\n11  chromedriver                        0x00000001004db8a4 chromedriver + 4094116\n12  chromedriver                        0x00000001004b06d4 chromedriver + 3917524\n13  chromedriver                        0x00000001004f8b08 chromedriver + 4213512\n14  chromedriver                        0x00000001004f8c84 chromedriver + 4213892\n15  chromedriver                        0x0000000100506a08 chromedriver + 4270600\n16  libsystem_pthread.dylib             0x000000019b32ef94 _pthread_start + 136\n17  libsystem_pthread.dylib             0x000000019b329d34 thread_start + 8", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2f5bfdcdb67d77680ec6c17dd844b87d\")>\n\n    def test_add_pizza_to_cart(browser):\n        url = \"http://pizzeria.skillbox.cc/\"\n        browser.get(url)\n        time.sleep(2)  # Ждем, чтобы страница загрузилась полностью\n    \n        # Находим изображение пиццы по имени\n        pizza_image = browser.find_element(By.XPATH, '//img[contains(@src, \"pexels-katerina-holmes\")]')\n    \n        # Находим родительский элемент изображения пиццы\n        pizza_parent = pizza_image.find_element(By.XPATH, './..')\n    \n        # Находим кнопку \"В корзину\" внутри родительского элемента\n>       add_to_cart_button = pizza_parent.find_element(By.XPATH, './/a[@class=\"add_to_cart_button\"]')\n\ntest_basket.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/opt/miniconda3/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:417: in find_element\n    return self._execute(Command.FIND_CHILD_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/miniconda3/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/miniconda3/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1031d7580>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...00019b32ef94 _pthread_start + 136\\\\n17  libsystem_pthread.dylib             0x000000019b329d34 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\".//a[@class=\"add_to_cart_button\"]\"}\nE         (Session info: chrome=125.0.6422.113); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       0   chromedriver                        0x000000010050e4c8 chromedriver + 4302024\nE       1   chromedriver                        0x0000000100506e10 chromedriver + 4271632\nE       2   chromedriver                        0x000000010013819c chromedriver + 278940\nE       3   chromedriver                        0x000000010017a2c4 chromedriver + 549572\nE       4   chromedriver                        0x000000010017085c chromedriver + 510044\nE       5   chromedriver                        0x00000001001b2c5c chromedriver + 781404\nE       6   chromedriver                        0x000000010016f004 chromedriver + 503812\nE       7   chromedriver                        0x000000010016f9ec chromedriver + 506348\nE       8   chromedriver                        0x00000001004d6510 chromedriver + 4072720\nE       9   chromedriver                        0x00000001004dafbc chromedriver + 4091836\nE       10  chromedriver                        0x00000001004bd754 chromedriver + 3970900\nE       11  chromedriver                        0x00000001004db8a4 chromedriver + 4094116\nE       12  chromedriver                        0x00000001004b06d4 chromedriver + 3917524\nE       13  chromedriver                        0x00000001004f8b08 chromedriver + 4213512\nE       14  chromedriver                        0x00000001004f8c84 chromedriver + 4213892\nE       15  chromedriver                        0x0000000100506a08 chromedriver + 4270600\nE       16  libsystem_pthread.dylib             0x000000019b32ef94 _pthread_start + 136\nE       17  libsystem_pthread.dylib             0x000000019b329d34 thread_start + 8\n\n/opt/miniconda3/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException"}, "start": 1717411988490, "stop": 1717411991033, "uuid": "50c91452-20b4-4958-87d1-f45b6b1a72cb", "historyId": "e38fc498a1f7bd75416eab20f760741b", "testCaseId": "e38fc498a1f7bd75416eab20f760741b", "fullName": "tests.test_basket#test_add_pizza_to_cart", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_basket"}, {"name": "host", "value": "MacBook-Air-MacBook.local"}, {"name": "thread", "value": "8391-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_basket"}]}