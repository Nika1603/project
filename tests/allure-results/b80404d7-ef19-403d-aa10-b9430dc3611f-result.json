{"name": "test_add_pizza_to_basket", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d76a77f4a61fd41203e86663770e6a1f\")>\n\n    @allure.feature(\"Basket\")\n    @allure.story(\"Add pizza to basket\")\n    def test_add_pizza_to_basket(driver):\n        with allure.step(\"Open main page\"):\n            driver.get(\"http://pizzeria.skillbox.cc/\")\n    \n        with allure.step(\"Find pizza image in slider\"):\n            pizza_image = WebDriverWait(driver, 10).until(\n                EC.visibility_of_element_located((By.CSS_SELECTOR, \"img[src='http://pizzeria.skillbox.cc/wp-content/uploads/2021/10/pexels-natasha-filippovskaya-4394612-300x300.jpg']\"))\n            )\n    \n        with allure.step(\"Hover over pizza image\"):\n            action = webdriver.ActionChains(driver)\n            action.move_to_element(pizza_image).perform()\n    \n        with allure.step(\"Click on 'Add to cart' button\"):\n>           add_to_cart_button = WebDriverWait(driver, 10).until(\n                EC.element_to_be_clickable((By.CSS_SELECTOR, \"a.button.add_to_cart_button\"))\n            )\n\ntest_basket.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d76a77f4a61fd41203e86663770e6a1f\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x10613c670>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/miniconda3/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "steps": [{"name": "Open main page", "status": "passed", "start": 1717413706632, "stop": 1717413707112}, {"name": "Find pizza image in slider", "status": "passed", "start": 1717413707113, "stop": 1717413707125}, {"name": "Hover over pizza image", "status": "passed", "start": 1717413707125, "stop": 1717413707384}, {"name": "Click on 'Add to cart' button", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/Users/macbooknikakrasivaya/PycharmProjects/2.7/pythonProjectFinal/tests/test_basket.py\", line 37, in test_add_pizza_to_basket\n    add_to_cart_button = WebDriverWait(driver, 10).until(\n  File \"/opt/miniconda3/lib/python3.9/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1717413707384, "stop": 1717413717789}], "start": 1717413706632, "stop": 1717413717791, "uuid": "ba0badb3-8c95-450b-ab23-17f82197af17", "historyId": "f824a8827b2f40c354da334feb7ef7a3", "testCaseId": "f824a8827b2f40c354da334feb7ef7a3", "fullName": "tests.test_basket#test_add_pizza_to_basket", "labels": [{"name": "story", "value": "Add pizza to basket"}, {"name": "feature", "value": "Basket"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_basket"}, {"name": "host", "value": "MacBook-Air-MacBook.local"}, {"name": "thread", "value": "9507-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_basket"}]}