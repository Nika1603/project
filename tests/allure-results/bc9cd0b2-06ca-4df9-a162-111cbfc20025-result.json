{"name": "test_add_pizza_to_cart", "status": "failed", "statusDetails": {"message": "AssertionError: Пицца не найдена в корзине\nassert 0 > 0\n +  where 0 = len([])", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0c08fa2cfad7a89c42b011ae4f5d442d\")>\n\n    def test_add_pizza_to_cart(browser):\n        try:\n            url = \"https://pizzeria.skillbox.cc/\"\n            logger.info(f\"Opening page: {url}\")\n            browser.get(url)\n            allure.attach(browser.get_screenshot_as_png(), name=\"Main Page\", attachment_type=AttachmentType.PNG)\n    \n            pizza_images = browser.find_elements(By.CLASS_NAME, 'pizza-image')\n            logger.info(f\"Found {len(pizza_images)} pizza images on the page\")\n    \n            for pizza_image in pizza_images:\n                actions = webdriver.ActionChains(browser)\n                actions.move_to_element(pizza_image).perform()\n    \n                add_to_cart_btn = pizza_image.find_element(By.CSS_SELECTOR,\n                                                           '.button.product_type_simple.add_to_cart_button')\n                add_to_cart_btn.click()\n                time.sleep(10)\n    \n    \n            url_cart = \"https://pizzeria.skillbox.cc/cart/\"\n            logger.info(f\"Opening cart page: {url_cart}\")\n            browser.get(url_cart)\n            allure.attach(browser.get_screenshot_as_png(), name=\"Cart Page\", attachment_type=AttachmentType.PNG)\n    \n    \n            pizza_items_in_cart = browser.find_elements(By.CLASS_NAME, 'cart_item')\n            assert len(pizza_items_in_cart) > 0, \"Пицца не найдена в корзине\"\n    \n            logger.info(\"Pizza successfully added to cart\")\n    \n        except Exception as e:\n            logger.error(f\"Error in the test: {e}\")\n            allure.attach(browser.get_screenshot_as_png(), name=\"Error\", attachment_type=AttachmentType.PNG)\n>           raise e\n\ntest_basket.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0c08fa2cfad7a89c42b011ae4f5d442d\")>\n\n    def test_add_pizza_to_cart(browser):\n        try:\n            url = \"https://pizzeria.skillbox.cc/\"\n            logger.info(f\"Opening page: {url}\")\n            browser.get(url)\n            allure.attach(browser.get_screenshot_as_png(), name=\"Main Page\", attachment_type=AttachmentType.PNG)\n    \n            pizza_images = browser.find_elements(By.CLASS_NAME, 'pizza-image')\n            logger.info(f\"Found {len(pizza_images)} pizza images on the page\")\n    \n            for pizza_image in pizza_images:\n                actions = webdriver.ActionChains(browser)\n                actions.move_to_element(pizza_image).perform()\n    \n                add_to_cart_btn = pizza_image.find_element(By.CSS_SELECTOR,\n                                                           '.button.product_type_simple.add_to_cart_button')\n                add_to_cart_btn.click()\n                time.sleep(10)\n    \n    \n            url_cart = \"https://pizzeria.skillbox.cc/cart/\"\n            logger.info(f\"Opening cart page: {url_cart}\")\n            browser.get(url_cart)\n            allure.attach(browser.get_screenshot_as_png(), name=\"Cart Page\", attachment_type=AttachmentType.PNG)\n    \n    \n            pizza_items_in_cart = browser.find_elements(By.CLASS_NAME, 'cart_item')\n>           assert len(pizza_items_in_cart) > 0, \"Пицца не найдена в корзине\"\nE           AssertionError: Пицца не найдена в корзине\nE           assert 0 > 0\nE            +  where 0 = len([])\n\ntest_basket.py:49: AssertionError"}, "attachments": [{"name": "Main Page", "source": "5161ce91-5ace-433e-a1c9-36f3194dd876-attachment.png", "type": "image/png"}, {"name": "Cart Page", "source": "61422f7e-2704-4fe0-bbf8-104e42aa29be-attachment.png", "type": "image/png"}, {"name": "Error", "source": "cb845af3-568a-4a5f-b9d2-843960445542-attachment.png", "type": "image/png"}, {"name": "log", "source": "cc4c0647-9b1e-4b2c-956b-1a097eede8be-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "b54e3a48-1c7c-4807-9296-c645d74403da-attachment.txt", "type": "text/plain"}], "start": 1717254962623, "stop": 1717254963830, "uuid": "34571882-0224-44a0-bfe3-e4c2568ded2b", "historyId": "e38fc498a1f7bd75416eab20f760741b", "testCaseId": "e38fc498a1f7bd75416eab20f760741b", "fullName": "tests.test_basket#test_add_pizza_to_cart", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_basket"}, {"name": "host", "value": "MacBook-Air-MacBook.local"}, {"name": "thread", "value": "6241-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_basket"}]}